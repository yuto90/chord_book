name: 🧹 Cleanup Debug Builds

on:
  pull_request:
    types: [closed]
  delete:
    # When a branch is deleted

jobs:
  cleanup-debug-builds:
    name: 🗑️ Remove Debug TestFlight Builds
    runs-on: macos-latest
    if: github.event.pull_request.merged == true || github.event.ref_type == 'branch'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Get Branch Information
        id: branch_info
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          else
            BRANCH_NAME="${{ github.event.ref }}"
          fi
          
          SAFE_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "safe_branch=$SAFE_BRANCH" >> $GITHUB_OUTPUT
          
          echo "🌿 Cleaning up builds for branch: $BRANCH_NAME"

      - name: 🔐 Setup App Store Connect API
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}
        run: |
          # API Keyの設定
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$APP_STORE_CONNECT_API_KEY_BASE64" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_ID.p8

      - name: 📱 Install App Store Connect CLI
        run: |
          # App Store Connect APIを操作するためのスクリプトを作成
          cat > cleanup_testflight.py << 'EOF'
          #!/usr/bin/env python3
          import os
          import subprocess
          import json
          import sys
          from datetime import datetime, timedelta

          def run_command(cmd):
              """Run shell command and return output"""
              result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
              if result.returncode != 0:
                  print(f"Error running command: {cmd}")
                  print(f"Error: {result.stderr}")
                  return None
              return result.stdout.strip()

          def get_app_id():
              """Get App Store Connect app ID"""
              app_id = os.environ.get('APP_STORE_CONNECT_APP_ID')
              if not app_id:
                  # Bundle IDから App ID を取得するロジックをここに実装
                  print("APP_STORE_CONNECT_APP_ID environment variable not set")
                  return None
              return app_id

          def cleanup_debug_builds(branch_name):
              """Cleanup debug builds for specific branch"""
              app_id = get_app_id()
              if not app_id:
                  return False
              
              api_key_id = os.environ.get('APP_STORE_CONNECT_API_KEY_ID')
              api_issuer_id = os.environ.get('APP_STORE_CONNECT_API_ISSUER_ID')
              
              # デバッグビルドのパターン
              debug_pattern = f"0.1.0-debug-{branch_name.lower().replace('/', '-')}"
              
              print(f"Looking for debug builds with pattern: {debug_pattern}")
              
              # この実装は概念的なもの - 実際のAPI呼び出しは環境に依存
              print(f"Would cleanup TestFlight builds matching: {debug_pattern}")
              
              return True

          if __name__ == "__main__":
              branch_name = sys.argv[1] if len(sys.argv) > 1 else "unknown"
              success = cleanup_debug_builds(branch_name)
              sys.exit(0 if success else 1)
          EOF
          
          chmod +x cleanup_testflight.py

      - name: 🗑️ Remove TestFlight Debug Builds
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_APP_ID: ${{ secrets.APP_STORE_CONNECT_APP_ID }}
        run: |
          # デバッグビルドのクリーンアップを実行
          python3 cleanup_testflight.py "${{ steps.branch_info.outputs.branch_name }}"

      - name: 🧹 Cleanup Build Artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const branch = '${{ steps.branch_info.outputs.safe_branch }}';
            
            // GitHub Actionsのアーティファクトをクリーンアップ
            try {
              const artifacts = await github.rest.actions.listArtifactsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100
              });
              
              const debugArtifacts = artifacts.data.artifacts.filter(artifact => 
                artifact.name.includes(`debug-build-${branch}`)
              );
              
              for (const artifact of debugArtifacts) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                console.log(`Deleted artifact: ${artifact.name}`);
              }
              
              console.log(`Cleaned up ${debugArtifacts.length} debug build artifacts for branch: ${branch}`);
            } catch (error) {
              console.log(`Error cleaning up artifacts: ${error.message}`);
            }

      - name: 💬 Comment Cleanup Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const branch = '${{ steps.branch_info.outputs.branch_name }}';
            
            const comment = `## 🧹 デバッグビルドのクリーンアップが完了しました

            **ブランチ:** \`${branch}\`
            
            ✅ TestFlightからデバッグビルドを削除しました
            ✅ GitHub Actionsのアーティファクトを削除しました
            
            PRマージに伴い、このブランチのデバッグビルドは利用できなくなります。`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });